# See https://github.com/check-spelling/check-spelling/wiki/Configuration-Examples:-patterns

# Automatically suggested patterns
# hit-count: 34028 file-count: 1772
# uuid:
\b[0-9a-fA-F]{8}-(?:[0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}\b

# hit-count: 19541 file-count: 843
# URL escaped characters
\%[0-9A-F]{2}

# hit-count: 5414 file-count: 1421
# microsoft
\b(?:https?://|)(?:(?:download\.visualstudio|docs|msdn2?|research)\.microsoft|blogs\.msdn)\.com/[-_a-zA-Z0-9()=./%]*

# hit-count: 2959 file-count: 238
# hex runs
\b[0-9a-fA-F]{16,}\b

# hit-count: 2530 file-count: 148
# hex digits including css/html color classes:
(?:[\\0][xX]|\\u|[uU]\+|#x?|\%23)[0-9a-fA-FgGrR_]{2,}(?:[uUlL]{0,3}|u\d+)\b

# hit-count: 1477 file-count: 762
# githubusercontent
/[-a-z0-9]+\.githubusercontent\.com/[-a-zA-Z0-9?&=_\/.]*

# hit-count: 1287 file-count: 61
# IPv6
\b(?:[0-9a-f]{0,4}:){3,7}[0-9a-f]{0,4}\b

# hit-count: 1094 file-count: 636
# GitHub SHAs (markdown)
(?:\[`?[0-9a-f]+`?\]\(https:/|)/(?:www\.|)github\.com(?:/[^/ ]+){2,}(?:/[^/ )]+/[0-9a-f]+(?:[-0-9a-zA-Z/#.]*|)\b|)

# hit-count: 664 file-count: 138
# Compiler flags
(?:^|[\t ,"'`=(])-X(?=[A-Z]{2,}|[A-Z][a-z]|[a-z]{2,})

# hit-count: 521 file-count: 73
# sha-... -- uses a fancy capture
(['"]|&quot;)[0-9a-f]{40,}\g{-1}

# hit-count: 170 file-count: 60
# IServiceProvider
\bI(?=(?:[A-Z][a-z]{2,})+\b)

# hit-count: 141 file-count: 57
# Python stringprefix / binaryprefix
# Note that there's a high false positive rate, remove the `?=` and search for the regex to see if the matches seem like reasonable strings
(?<!')\b(?:B|BR|Br|F|FR|Fr|R|RB|RF|Rb|Rf|U|UR|Ur|b|bR|br|f|fR|fr|r|rB|rF|rb|rf|u|uR|ur)'(?:[A-Z]{3,}|[A-Z][a-z]{2,}|[a-z]{3,})

# hit-count: 125 file-count: 4
# GitHub JSON
"node_id": "[-a-zA-Z=;:/0-9+]*"

# hit-count: 59 file-count: 27
# Amazon
\bamazon\.com/[-\w]+/(?:dp/[0-9A-Z]+|)

# hit-count: 41 file-count: 12
# oracle
\bdocs\.oracle\.com/[-0-9a-zA-Z./_?#&=]*

# hit-count: 40 file-count: 16
# While you could try to match `http://` and `https://` by using `s?` in `https?://`, sometimes there
# YouTube url
\b(?:(?:www\.|)youtube\.com|youtu.be)/(?:channel/|embed/|playlist\?list=|watch\?v=|v/|)[-a-zA-Z0-9?&=_]*

# hit-count: 37 file-count: 18
# mailto urls
mailto:[-a-zA-Z=;:/?%&0-9+@.]{3,}

# hit-count: 35 file-count: 16
# w3
\bw3\.org/[-0-9a-zA-Z/#.]+

# hit-count: 29 file-count: 8
# Slack
\bslack\.com/[-0-9a-zA-Z/_~?&=.]*

# hit-count: 28 file-count: 1
# GitHub SHAs (api)
\bapi.github\.com/repos(?:/[^/ ]+){3}/[0-9a-f]+\b

# hit-count: 18 file-count: 16
# Twitter status
\btwitter\.com/[^/)]*(?:/status/\d+(?:\?[-_0-9a-zA-Z&=]*|)|)

# hit-count: 18 file-count: 2
# Update Lorem based on your content (requires `ge` and `w` from https://github.com/jsoref/spelling; and `review` from https://github.com/check-spelling/check-spelling/wiki/Looking-for-items-locally )
# grep '^[^#].*lorem' .github/actions/spelling/patterns.txt|perl -pne 's/.*i..\?://;s/\).*//' |tr '|' "\n"|sort -f |xargs -n1 ge|perl -pne 's/^[^:]*://'|sort -u|w|sed -e 's/ .*//'|w|review -
# Warning, while `(?i)` is very neat and fancy, if you have some binary files that aren't proper unicode, you might run into:
## Operation "substitution (s///)" returns its argument for non-Unicode code point 0x1C19AE (the code point will vary).
## You could manually change `(?i)X...` to use `[Xx]...`
## or you could add the files to your `excludes` file (a version after 0.0.19 should identify the file path)
# Lorem
(?:\w|\s|[,.])*\b(?i)(?:amet|consectetur|cursus|dolor|eros|ipsum|lacus|libero|ligula|lorem|magna|neque|nulla|suscipit|tempus)\b(?:\w|\s|[,.])*

# hit-count: 16 file-count: 2
# Google CDN
\bclients2\.google(?:usercontent|)\.com[-0-9a-zA-Z/.]*

# hit-count: 13 file-count: 9
# data url in quotes
(['"])data:.*?(?:[A-Z]{3,}|[A-Z][a-z]{2,}|[a-z]{3,}).*\g{-1}

# hit-count: 13 file-count: 9
# data url
data:[-a-zA-Z=;:/0-9+]*,\S*

# hit-count: 12 file-count: 8
# gist github
\bgist\.github\.com/[^/ ]+/[0-9a-f]+

# hit-count: 12 file-count: 7
# vs devops
\bvisualstudio.com(?::443|)/[-\w/?=%&.]*

# hit-count: 11 file-count: 5
# Non-English
[a-zA-Z]*[ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÜÝßàáâãäåæçèéêëìíîïðñòóôõöøùúûüýÿĀāŁłŃńŅņŒœŚśŸŽž][a-zA-Z]{3}[a-zA-ZÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÜÝßàáâãäåæçèéêëìíîïðñòóôõöøùúûüýÿĀāŁłŃńŅņŒœŚśŸŽž]*

# hit-count: 11 file-count: 2
# Google APIs
\bgoogleapis\.(?:com|dev)/[a-z]+/(?:v\d+/|)[a-z]+/[@:./?=\w]+

# hit-count: 10 file-count: 9
# Contributor
\[[^\]]+]\(https://github\.com/[^/ ]+\)

# hit-count: 7 file-count: 1
# Goo.gl
/goo\.gl/[a-zA-Z0-9]+

# hit-count: 6 file-count: 2
# ibm
[a-z.]*ibm\.com/[-_#=:%!?~.\\/\d\w]*

# hit-count: 5 file-count: 5
# medium
\bmedium\.com/\@[^/]+/[-\w]+

# hit-count: 3 file-count: 3
# Reddit
\breddit\.com/r/[/\w_]*

# hit-count: 3 file-count: 3
# hex in url queries
=[0-9a-fA-F]*?(?:[A-F]{3,}|[a-f]{3,})[0-9a-fA-F]*?&

# hit-count: 3 file-count: 2
# Regular expressions for (P|p)assword
\([A-Z]\|[a-z]\)[a-z]+

# hit-count: 2 file-count: 2
# The leading `/` here is as opposed to the `\b` above
# ... a short way to match `https://` or `http://` since most urls have one of those prefixes
# Google Docs
/docs\.google\.com/[a-z]+/(?:ccc\?key=\w+|(?:u/\d+|d/(?:e/|)[0-9a-zA-Z_-]+/)?(?:edit\?[-\w=#.]*|/\?[\w=&]*|))

# hit-count: 2 file-count: 2
# GHSA
GHSA(?:-[0-9a-z]{4}){3}

# hit-count: 2 file-count: 2
# stackexchange -- https://stackexchange.com/feeds/sites
\b(?:askubuntu|serverfault|stack(?:exchange|overflow)|superuser).com/(?:questions/\w+/[-\w]+|a/)

# hit-count: 2 file-count: 1
# AWS ELB
\b\w+\.[-0-9a-z]+\.elb\.amazonaws\.com\b

# hit-count: 2 file-count: 1
# git.io
\bgit\.io/[0-9a-zA-Z]+

# hit-count: 1 file-count: 1
# YouTube image
\bimg\.youtube\.com/vi/[-a-zA-Z0-9?&=_]*

# hit-count: 1 file-count: 1
# Google Accounts
\baccounts.google.com/[-_/?=.:;+%&0-9a-zA-Z]*

# hit-count: 1 file-count: 1
# Google Storage
\b[-a-zA-Z0-9.]*\bstorage\d*\.googleapis\.com(?:/\S*|)

# hit-count: 1 file-count: 1
# shields.io
\bshields\.io/[-\w/%?=&.]*

# hit-count: 1 file-count: 1
# Twitter markdown
\[\@[^[/\]:]*?]\(https://twitter.com/[^/)]*(?:/status/\d+(?:\?[-_0-9a-zA-Z&=]*|)|)\)

# hit-count: 1 file-count: 1
# ssh
(?:ssh-\S+|-nistp256) [-a-zA-Z=;:/0-9+]{12,}

# hit-count: 1 file-count: 1
# JavaScript regular expressions
/.*/[gim]*\.test\(

# c# regex
@'[^']*\\s[a-z][^']*'
@"[^"]*\\s[a-z][^"]*"

# hit-count: 1 file-count: 1
# curl arguments
\b(?:\\n|)curl(?:\s+-[a-zA-Z]{1,2}\b)*(?:\s+-[a-zA-Z]{3,})(?:\s+-[a-zA-Z]+)*

E2E

# acceptable duplicates
# ls directory listings
[-bcdlpsw](?:[-r][-w][-sx]){3}\s+\d+\s+(\S+)\s+\g{-1}\s+\d+\s+
# C types
\s(long|LONG) \g{-1}\s
# javadoc / .net
(?:[\\@](?:groupname|param)|(?:public|private)(?:\s+static|\s+readonly)*)\s+(\w+)\s+\g{-1}\s

# Commit message -- Signed-off-by and friends
^\s*(?:(?:Based-on-patch|Co-authored|Helped|Mentored|Reported|Reviewed|Signed-off)-by|Thanks-to): (?:[^<]*<[^>]*>|[^<]*)\s*$

# Autogenerated revert commit message
^This reverts commit [0-9a-f]{40}\.$

# ignore long runs of a single character:
\b([A-Za-z])\g{-1}{3,}\b
